@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

    @if (SignInManager.IsSignedIn(User))
    {
        <h4><i class="fa-solid fa-unlock"></i> Admin </h4>
    }
    else
    {
        <h4><i class="fa-solid fa-lock"></i> Admin </h4>
    }
<ul class="navbar-nav">

    @if (SignInManager.IsSignedIn(User))
    {
                <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="Course" asp-action="Index">Kurser
                Admin</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="Post" asp-action="Index">Inlägg
                Admin</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="Category" asp-action="Index">Kategorier
                Admin</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn text-light">Logga ut</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Registrera</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Logga in</a>
        </li>
    }

</ul>
